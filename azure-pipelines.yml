trigger:
  branches:
    include:
      - dev  # Trigger on push to dev only

pr:
  branches:
    include:
      - demo
      - prod  # Trigger PRs targeting demo or prod

variables:
  html_filename: 'index.html'
  nginx_web_root: '/var/www/html/demo-site'
  nginx_config_path: '/etc/nginx/sites-available/demo-site'
  nginx_symlink_path: '/etc/nginx/sites-enabled/demo-site'

  sourceBranchOnly: $[replace(replace(variables['Build.SourceBranch'], 'refs/heads/', ''), 'refs/pull/', '')]
  isFeaturePR: $[and(eq(variables['Build.Reason'], 'PullRequest'), startsWith(variables['sourceBranchOnly'], 'feature/'))]


jobs:
# 🧩 Job with branch demand (used for dev, demo, prod branches)
- job: DeployWithDemands
  displayName: 'Deploy with branch-specific agent'
  condition: ne(variables['isFeaturePR'], 'true')  # Skip this if it's a feature PR
  pool:
    name: 'Default'
    demands:
      - branch -equals $(normalizedBranch)

  steps:
    - script: |
        echo "🔁 Source Branch: $(Build.SourceBranch)"
        echo "🔧 Normalized Branch: $(normalizedBranch)"
        echo "📦 isFeaturePR: $(isFeaturePR)"
      displayName: 'Show Branch Info'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: '**/index.html'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Copy index.html from current branch'

    - script: |
        echo "📁 Setting up NGINX web root at $(nginx_web_root)..."
        sudo mkdir -p $(nginx_web_root)
        sudo cp $(Build.ArtifactStagingDirectory)/$(html_filename) $(nginx_web_root)/
      displayName: 'Move HTML to NGINX root'

    - script: |
        echo "⚙️ Creating NGINX site config..."
        echo "server {
          listen 80;
          server_name _;

          root $(nginx_web_root);
          index index.html;

          location / {
              try_files \$uri \$uri/ =404;
          }
        }" | sudo tee $(nginx_config_path) > /dev/null
      displayName: 'Write NGINX Config File'

    - script: |
        echo "🔄 Linking and restarting NGINX..."
        sudo ln -sf $(nginx_config_path) $(nginx_symlink_path)
        sudo nginx -t && sudo systemctl reload nginx
      displayName: 'Reload NGINX'

# 🚫 Job without branch demand (used for feature/* PRs only)
- job: DeployWithoutDemands
  displayName: 'Deploy without agent demand (feature PR)'
  condition: eq(variables['isFeaturePR'], 'true')
  pool:
    name: 'Default'

  steps:
    - script: |
        echo "🔁 Source Branch: $(Build.SourceBranch)"
        echo "🔧 Normalized Branch: $(normalizedBranch)"
        echo "📦 isFeaturePR: $(isFeaturePR)"
      displayName: 'Show Branch Info'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: '**/index.html'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Copy index.html from current branch'

    - script: |
        echo "📁 Setting up NGINX web root at $(nginx_web_root)..."
        sudo mkdir -p $(nginx_web_root)
        sudo cp $(Build.ArtifactStagingDirectory)/$(html_filename) $(nginx_web_root)/
      displayName: 'Move HTML to NGINX root'

    - script: |
        echo "⚙️ Creating NGINX site config..."
        echo "server {
          listen 80;
          server_name _;

          root $(nginx_web_root);
          index index.html;

          location / {
              try_files \$uri \$uri/ =404;
          }
        }" | sudo tee $(nginx_config_path) > /dev/null
      displayName: 'Write NGINX Config File'

    - script: |
        echo "🔄 Linking and restarting NGINX..."
        sudo ln -sf $(nginx_config_path) $(nginx_symlink_path)
        sudo nginx -t && sudo systemctl reload nginx
      displayName: 'Reload NGINX'
