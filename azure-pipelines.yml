trigger:
  branches:
    include:
      - dev

pr:
  branches:
    include:
      - dev
      - demo
      - prod

variables:
  html_filename: 'index.html'
  nginx_web_root: '/var/www/html/demo-site'
  nginx_config_path: '/etc/nginx/sites-available/demo-site'
  nginx_symlink_path: '/etc/nginx/sites-enabled/demo-site'

jobs:
- job: PR_Dev
  displayName: 'PR to Dev'
  condition: and(eq(variables['Build.Reason'], 'PullRequest'), contains(variables['System.PullRequest.TargetBranch'], 'dev'))
  pool:
    name: 'Default'
    demands:
      - branch_dev_merge -equals merge
  steps:
    - script: |
        echo "🔁 PR triggered for target: dev"
        echo "Build.Reason: $(Build.Reason)"
        echo "Target Branch: $(System.PullRequest.TargetBranch)"
      displayName: 'Print PR Info (Dev)'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: '**/index.html'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Copy index.html'

    - script: |
        echo "📁 Setting up NGINX..."
        sudo mkdir -p $(nginx_web_root)
        sudo cp $(Build.ArtifactStagingDirectory)/$(html_filename) $(nginx_web_root)/
      displayName: 'Deploy to NGINX'

    - script: |
        echo "⚙️ Creating NGINX config..."
        echo "server {
          listen 80;
          server_name _;

          root $(nginx_web_root);
          index index.html;

          location / {
              try_files \$uri \$uri/ =404;
          }
        }" | sudo tee $(nginx_config_path) > /dev/null
      displayName: 'Write NGINX Config'

    - script: |
        echo "🔄 Reloading NGINX..."
        sudo ln -sf $(nginx_config_path) $(nginx_symlink_path)
        sudo nginx -t && sudo systemctl reload nginx
      displayName: 'Reload NGINX'

- job: PR_Demo
  displayName: 'PR to Demo'
  condition: and(eq(variables['Build.Reason'], 'PullRequest'), contains(variables['System.PullRequest.TargetBranch'], 'demo'))
  pool:
    name: 'Default'
    demands:
      - branch_demo_merge -equals merge
  steps:
    - script: |
        echo "🔁 PR triggered for target: demo"
        echo "Build.Reason: $(Build.Reason)"
        echo "Target Branch: $(System.PullRequest.TargetBranch)"
      displayName: 'Print PR Info (Demo)'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: '**/index.html'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Copy index.html'

    - script: |
        echo "📁 Setting up NGINX..."
        sudo mkdir -p $(nginx_web_root)
        sudo cp $(Build.ArtifactStagingDirectory)/$(html_filename) $(nginx_web_root)/
      displayName: 'Deploy to NGINX'

    - script: |
        echo "⚙️ Creating NGINX config..."
        echo "server {
          listen 80;
          server_name _;

          root $(nginx_web_root);
          index index.html;

          location / {
              try_files \$uri \$uri/ =404;
          }
        }" | sudo tee $(nginx_config_path) > /dev/null
      displayName: 'Write NGINX Config'

    - script: |
        echo "🔄 Reloading NGINX..."
        sudo ln -sf $(nginx_config_path) $(nginx_symlink_path)
        sudo nginx -t && sudo systemctl reload nginx
      displayName: 'Reload NGINX'

- job: PR_Prod
  displayName: 'PR to Prod'
  condition: and(eq(variables['Build.Reason'], 'PullRequest'), contains(variables['System.PullRequest.TargetBranch'], 'prod'))
  pool:
    name: 'Default'
    demands:
      - branch_prod_merge -equals merge
  steps:
    - script: |
        echo "🔁 PR triggered for target: prod"
        echo "Build.Reason: $(Build.Reason)"
        echo "Target Branch: $(System.PullRequest.TargetBranch)"
      displayName: 'Print PR Info (Prod)'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: '**/index.html'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Copy index.html'

    - script: |
        echo "📁 Setting up NGINX..."
        sudo mkdir -p $(nginx_web_root)
        sudo cp $(Build.ArtifactStagingDirectory)/$(html_filename) $(nginx_web_root)/
      displayName: 'Deploy to NGINX'

    - script: |
        echo "⚙️ Creating NGINX config..."
        echo "server {
          listen 80;
          server_name _;

          root $(nginx_web_root);
          index index.html;

          location / {
              try_files \$uri \$uri/ =404;
          }
        }" | sudo tee $(nginx_config_path) > /dev/null
      displayName: 'Write NGINX Config'

    - script: |
        echo "🔄 Reloading NGINX..."
        sudo ln -sf $(nginx_config_path) $(nginx_symlink_path)
        sudo nginx -t && sudo systemctl reload nginx
      displayName: 'Reload NGINX'

- job: Branch_Build
  displayName: 'Branch Build (Push to dev)'
  condition: and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranchName'], 'dev'))
  pool:
    name: 'Default'
    demands:
      - branch -equals dev
  steps:
    - script: |
        echo "🔁 Branch Build: $(Build.SourceBranchName)"
      displayName: 'Print Branch Name'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: '**/index.html'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Copy index.html'

    - script: |
        echo "📁 Setting up NGINX..."
        sudo mkdir -p $(nginx_web_root)
        sudo cp $(Build.ArtifactStagingDirectory)/$(html_filename) $(nginx_web_root)/
      displayName: 'Deploy to NGINX'

    - script: |
        echo "⚙️ Creating NGINX config..."
        echo "server {
          listen 80;
          server_name _;

          root $(nginx_web_root);
          index index.html;

          location / {
              try_files \$uri \$uri/ =404;
          }
        }" | sudo tee $(nginx_config_path) > /dev/null
      displayName: 'Write NGINX Config'

    - script: |
        echo "🔄 Reloading NGINX..."
        sudo ln -sf $(nginx_config_path) $(nginx_symlink_path)
        sudo nginx -t && sudo systemctl reload nginx
      displayName: 'Reload NGINX'
