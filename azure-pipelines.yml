trigger:
  branches:
    include:
      - dev  # Only trigger on push to dev

pr:
  branches:
    include:
      - demo
      - prod  # Only trigger PRs targeting demo or prod

variables:
  html_filename: 'index.html'
  nginx_web_root: '/var/www/html/demo-site'
  nginx_config_path: '/etc/nginx/sites-available/demo-site'
  nginx_symlink_path: '/etc/nginx/sites-enabled/demo-site'

  # Extract branch name from source ref (for push or PR)
  sourceBranchName: $[replace(replace(variables['Build.SourceBranch'], 'refs/heads/', ''), 'refs/pull/', '')]

  # Is this a PR from a feature/* branch?
  isFeaturePR: $[and(eq(variables['Build.Reason'], 'PullRequest'), startsWith(variables['sourceBranchName'], 'feature/'))]

jobs:

# ✅ Job for dev/demo/prod — with agent demand
- job: DeployWithDemands
  displayName: 'Deploy with Branch Demands'
  condition: ne(variables['isFeaturePR'], 'true')  # Skip if it's a feature PR
  pool:
    name: 'Default'
    demands:
      - branch -equals $(sourceBranchName)

  steps:
    - script: |
        echo "🌿 Branch: $(Build.SourceBranch)"
        echo "🔍 Normalized: $(sourceBranchName)"
        echo "🚀 Feature PR? $(isFeaturePR)"
      displayName: 'Log Info'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: '**/index.html'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Copy index.html'

    - script: |
        echo "Deploying to $(nginx_web_root)"
        sudo mkdir -p $(nginx_web_root)
        sudo cp $(Build.ArtifactStagingDirectory)/$(html_filename) $(nginx_web_root)/
      displayName: 'Move HTML to NGINX'

    - script: |
        echo "Generating NGINX config"
        echo "server {
          listen 80;
          server_name _;
          root $(nginx_web_root);
          index index.html;
          location / {
              try_files \$uri \$uri/ =404;
          }
        }" | sudo tee $(nginx_config_path) > /dev/null
      displayName: 'Write NGINX Config'

    - script: |
        echo "Reloading NGINX..."
        sudo ln -sf $(nginx_config_path) $(nginx_symlink_path)
        sudo nginx -t && sudo systemctl reload nginx
      displayName: 'Restart NGINX'

# ✅ Job for feature/* PRs — no branch demand
- job: DeployWithoutDemands
  displayName: 'Deploy without Branch Demands (Feature PR)'
  condition: eq(variables['isFeaturePR'], 'true')  # Only run for PRs from feature/*
  pool:
    name: 'Default'

  steps:
    - script: |
        echo "🌿 Branch: $(Build.SourceBranch)"
        echo "🔍 Normalized: $(sourceBranchName)"
        echo "🚀 Feature PR? $(isFeaturePR)"
      displayName: 'Log Info'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: '**/index.html'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Copy index.html'

    - script: |
        echo "Deploying to $(nginx_web_root)"
        sudo mkdir -p $(nginx_web_root)
        sudo cp $(Build.ArtifactStagingDirectory)/$(html_filename) $(nginx_web_root)/
      displayName: 'Move HTML to NGINX'

    - script: |
        echo "Generating NGINX config"
        echo "server {
          listen 80;
          server_name _;
          root $(nginx_web_root);
          index index.html;
          location / {
              try_files \$uri \$uri/ =404;
          }
        }" | sudo tee $(nginx_config_path) > /dev/null
      displayName: 'Write NGINX Config'

    - script: |
        echo "Reloading NGINX..."
        sudo ln -sf $(nginx_config_path) $(nginx_symlink_path)
        sudo nginx -t && sudo systemctl reload nginx
      displayName: 'Restart NGINX'
